@page "/"
@using filipealmeida.Models
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<div id="home" class="hero-section my-5 animate__animated animate__fadeInUp" role="region" aria-label="Hero Section">
    @if (bio != null)
    {
        <div class="container text-center">
            <h1 class="display-4">@bio.Name</h1>
            <p class="lead">@bio.Summary</p>
        </div>
    }
</div>

<div id="experience" class="my-5" role="region" aria-label="Experience Section">
    <div class="container">
        <h2>Experience</h2>
        @if (experiences == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="timeline">
                @foreach (var experience in experiences.OrderByDescending(e => e.From))
                {
                    <div class="timeline-item" role="article" aria-label="@experience.Title at @experience.Company">
                        <div class="timeline-content">
                            <p>
                                <h4 class="card-title">@experience.Title</h4>
                                <h5 class="card-title">@experience.From.ToString("MMM yyyy") - @(experience.To == null ? "current" : experience.To.Value.ToString("MMM yyyy"))</h5>
                            </p>
                            <p class="card-text">@experience.Company<br>@experience.Location</p>
                            <p class="card-text">@experience.Description</p>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<div id="skills" class="my-5" role="region" aria-label="Skills Section">
    <div class="container">
        <h2>Skills</h2>
        @if (skills == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="skills-container"></div>
        }
    </div>
</div>

@code {
    private Bio? bio;
    private List<Experience>? experiences;
    private List<Skill>? skills;

    protected override async Task OnInitializedAsync()
    {
        bio = await HttpClient.GetFromJsonAsync<Bio>("data/bio.json");
        experiences = await HttpClient.GetFromJsonAsync<List<Experience>>("data/experience.json");
        skills = await HttpClient.GetFromJsonAsync<List<Skill>>("data/skills.json");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (experiences != null)
        {
            await JSRuntime.InvokeVoidAsync("initTimeline");
        }
        if (skills != null)
        {
            await JSRuntime.InvokeVoidAsync("initSkillCloud", skills);
        }
    }
}