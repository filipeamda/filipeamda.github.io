@page "/"
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<div id="home" class="hero-section my-5 animate__animated animate__fadeInUp">
    <div class="container text-center">
        <h1 class="display-4">Welcome to My Portfolio</h1>
        <p class="lead">Hi, I'm a C# developer crafting innovative solutions with .NET and Blazor.</p>
    </div>
</div>

<div id="bio" class="my-5">
    <div class="container">
        @if (bio == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="card shadow-sm animate__animated animate__fadeInUp">
                <div class="card-body">
                    <h2 class="card-title">@bio.Name</h2>
                    <h4 class="card-subtitle mb-2 text-muted">@bio.Title</h4>
                    <p class="card-text">@bio.Summary</p>
                    <a href="@bio.LinkedIn" class="btn btn-primary">LinkedIn Profile</a>
                </div>
            </div>
        }
    </div>
</div>

<div id="experience" class="my-5">
    <div class="container">
        <h2>Experience</h2>
        @if (experiences == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="timeline">
                @foreach (var experience in experiences.OrderBy(e => e.From))
                {
                    <div class="timeline-item">
                        <div class="timeline-content">
                            <h4 class="card-title">@experience.Title</h4>
                            <h5 class="card-title">@experience.From - @experience.To</h5>
                            <p class="card-text">@experience.Company</p>
                            <p class="card-text">@experience.Location</p>
                            <p class="card-text">@experience.Description</p>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<div id="skills" class="my-5">
    <div class="container">
        <h2>Skills</h2>
        @if (skills == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="skills-container">
                <div class="tagcloud"></div>
            </div>
        }
    </div>
</div>

@code {
    private Bio? bio;
    private List<Experience>? experiences;
    private List<Skill>? skills;

    protected override async Task OnInitializedAsync()
    {
        bio = await HttpClient.GetFromJsonAsync<Bio>("data/bio.json");
        experiences = await HttpClient.GetFromJsonAsync<List<Experience>>("data/experience.json");
        skills = await HttpClient.GetFromJsonAsync<List<Skill>>("data/skills.json");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (experiences != null)
        {
            await JSRuntime.InvokeVoidAsync("initTimeline");
        }
        if (skills != null)
        {
            var skillNames = skills.Select(s => s.Name).ToList();
            await JSRuntime.InvokeVoidAsync("initSkillCloud", skillNames);
        }
    }

    private record Bio(string Name, string Title, string Summary, string LinkedIn);
    private record Experience(string Title, string From, string To, string Company, string Location, string Description);
    private record Skill(string Name, string Proficiency);
}